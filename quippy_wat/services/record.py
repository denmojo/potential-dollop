import sqlalchemy as sa
from paginate_sqlalchemy import SqlalchemyOrmPage #<- provides pagination
from quippy_wat.models import DBSession, Quip


class RecordService(object):

    @classmethod
    def all(cls, request):
        query = DBSession.query(Quip)
        return query.order_by(sa.desc(Quip.created_date))

    @classmethod
    def by_id(cls, _id, request):
        query = DBSession.query(Quip)
        return query.get(_id)

    @classmethod
    def get_paginator(cls, request, page=1, items_per_page=5):
        items_per_page = items_per_page
        query = DBSession.query(Quip)
        query = query.order_by(sa.desc(Quip.created_date))
        query_params = request.GET.mixed()

        def url_maker(link_page):
            # replace page param with values generated by paginator
            query_params['page'] = link_page
            return request.current_route_url(_query=query_params)

        return SqlalchemyOrmPage(query, page, items_per_page,
                                 url_maker=url_maker)
